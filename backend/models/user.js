const mongoose = require('mongoose');

var userSchema = new mongoose.Schema({
  email: String,
  created_at: { type:Date, default:Date.now },
  accessToken: {type: String, required: true},
  salt: {type: String, required: true},
  sessionID: {type: String },
  active: {type: Boolean, default: false},
  model: {type: Number, default: null},
  start_at: { type:Array },
  end_at: { type: Array },
  sd_cd: {type: String, default: null},
  sd_nm: {type: String, default: null},
  // 공통질문
  age: {type: Number},
  gender: {type: String},
  belong: {type: String},
  marriage: {type: String},
  kid: {type: String},
  health: {type: Number},
  handicap: {type: String},
  handicapReason: {type: Array},
  handicapReasonETC: {type: String},
  health2weaksAgo: {type: String},
  health2weaksAgoNumber: {type: String},
  cigar: {type: String},
  cigarOneDay: {type: String},
  cigarOneMonth: {type: String},
  cigarStopDay: {type: String},
  challenge: {type: Number},
  challengeNonStop: {type: Number},
  alcohol: {type: Number},
  mersc: {type: Number},
  radiation: {type: Number},
  nd: {type: Number},
  sd: {type: Number},
  pd: {type: Number},
  cd: {type: Number},
  merscDeep: {type: Number},
  radiationDeep: {type: Number},
  ndDeep: {type: Number},
  sdDeep: {type: Number},
  pdDeep: {type: Number},
  cdDeep: {type: Number},
  infoType: {type: String},
  preferInfoType: {type: String},
  customInfo: {type: Number},
  customHealthInfo: {type: Number},
  understandExpert: {type: Number},
  understandNumber: {type: Number},
  infoSource: {type: String},
  infoSourceETC: {type: String},
  compareHealth: {type: Number},
  dustDamage: {type: Number},
  dust2017Gov: {type: Number},
  dustReact: {type: Number},
  airKorea: {type: Number},
  obl: {type: Number},
  oftenSearch: {type: Number},
  realAction: {type: String},
  howOftenAction: {type: Number},
  isThatEffect: {type: Number},
  difficulty: {type: Number},
  trust: {type: Number},
  interest: {type: Array},
  interestETC: {type: String},
  enough: {type: Number},
  rightExplain: {type: String},
  test1: {type: String},
  test2: {type: String},
  test3: {type: String},

  // 모델1 질문
  model1_myLocAverAirPol: {type: String},
  model1_locAverAirPol: {type: String},
  model1_useful: {type: Number},
  model1_difficulty: {type: Number},
  model1_search: {type: Number},
  model1_riskDeep: {type: Number},
  model1_afterIncrease: {type: Number},
  model1_action: {type: Number},

  //모델2 질문
  model2_myLocAverAirPol: {type: String},
  model2_locAverAirPol: {type: String},
  model2_myLocAd: {type: String},
  model2_locAd: {type: String},
  model2_useful: {type: Number},
  model2_difficulty: {type: Number},
  model2_search: {type: Number},
  model2_riskDeep: {type: Number},
  model2_afterIncrease: {type: Number},
  model2_action: {type: Number},
});

module.exports = mongoose.model('User', userSchema);